# Generated by Django 4.2.7 on 2025-08-03 16:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DecoyQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='The decoy question text')),
                ('min_answer', models.IntegerField(default=1)),
                ('max_answer', models.IntegerField(default=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameRoom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('waiting', 'Waiting for Players'), ('in_progress', 'Game in Progress'), ('finished', 'Game Finished')], default='waiting', max_length=20)),
                ('max_players', models.IntegerField(default=8)),
                ('current_round', models.IntegerField(default=0)),
                ('total_rounds', models.IntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosted_games', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=50)),
                ('score', models.IntegerField(default=0)),
                ('is_connected', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='game.gameroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'room')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='The main question text')),
                ('category', models.CharField(choices=[('lifestyle', 'Lifestyle & Habits'), ('preferences', 'Preferences & Opinions'), ('experiences', 'Experiences'), ('hypothetical', 'Hypothetical'), ('general', 'General')], default='general', max_length=20)),
                ('min_answer', models.IntegerField(default=1, help_text='Minimum expected answer')),
                ('max_answer', models.IntegerField(default=20, help_text='Maximum expected answer')),
                ('difficulty', models.IntegerField(choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Hard')], default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category', 'difficulty'],
            },
        ),
        migrations.CreateModel(
            name='GameRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField()),
                ('status', models.CharField(choices=[('setup', 'Setting Up'), ('answering', 'Players Answering'), ('discussion', 'Discussion Phase'), ('voting', 'Voting Phase'), ('results', 'Results Phase'), ('finished', 'Round Finished')], default='setup', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('discussion_started_at', models.DateTimeField(blank=True, null=True)),
                ('voting_started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('decoy_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.decoyquestion')),
                ('imposter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imposter_rounds', to='game.player')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.question')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='game.gameroom')),
            ],
            options={
                'unique_together': {('room', 'round_number')},
            },
        ),
        migrations.CreateModel(
            name='GameEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('player_joined', 'Player Joined'), ('player_left', 'Player Left'), ('game_started', 'Game Started'), ('round_started', 'Round Started'), ('answer_submitted', 'Answer Submitted'), ('discussion_started', 'Discussion Started'), ('voting_started', 'Voting Started'), ('vote_submitted', 'Vote Submitted'), ('round_ended', 'Round Ended'), ('game_ended', 'Game Ended')], max_length=20)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.player')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='game.gameroom')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('accused', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes_received', to='game.player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='game.gameround')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes_cast', to='game.player')),
            ],
            options={
                'unique_together': {('round', 'voter')},
            },
        ),
        migrations.CreateModel(
            name='PlayerAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='game.gameround')),
            ],
            options={
                'unique_together': {('round', 'player')},
            },
        ),
    ]
